---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      chart: qbittorrent
      version: 13.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
  values:
    image:
      repository: ghcr.io/k8s-at-home/qbittorrent
      tag: v4.4.2
    env:
      TZ: "${TIMEZONE}"
    settings:
      automaticPortSetup: false
    service:
      main:
        ports:
          http:
            port: 8080
      bittorrent:
        enabled: true
        type: LoadBalancer
        externalIPs:
          - "${SVC_QBITTORRENT_ADDR}"
        ports:
          bittorrent:
            enabled: true
            port: 50413
            protocol: TCP
            targetPort: 50413
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "download-box"
          hajimari.io/appName: "qbittorent"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-cloudflare-only@kubernetescrd
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
        hosts:
          - host: &host "qb.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "qbittorent-tls"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 1000
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDR}"
            path: /media/downloads
        mountPath: /media/downloads
    resources:
      requests:
        cpu: 100m
        memory: 250Mi
      limits:
        memory: 6000Mi
