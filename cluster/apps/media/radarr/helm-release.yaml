---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      chart: radarr
      version: 16.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
  values:
    image:
      repository: ghcr.io/k8s-at-home/radarr-develop
      tag: v4.2.0.6438
    env:
      TZ: "${TIMEZONE}"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip-box"
          hajimari.io/appName: "radarr"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-cloudflare-only@kubernetescrd ,networking-traefik-sso@kubernetescrd
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
        hosts:
          - host: &host "radarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "radarr-tls"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups:
        - 1000
#    metrics:
#      enabled: true
#      serviceMonitor:
#        interval: 3m
#        scrapeTimeout: 1m
#      prometheusRule:
#        enabled: true
#      exporter:
#        image:
#          repository: ghcr.io/onedr0p/exportarr
#          tag: v1.0.0
#        env:
#          port: 9794
#          additionalMetrics: true
#          unknownQueueItems: true
    persistence:
      config:
        enabled: true
        existingClaim: radarr-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDR}"
            path: /media
        mountPath: /media
#      backup:
#        enabled: true
#        type: custom
#        volumeSpec:
#          nfs:
#            server: "expanse.${SECRET_PRIVATE_DOMAIN}"
#            path: /tycho/Apps/External/Backups/radarr
#        mountPath: /config/Backups
#        readOnly: false
    resources:
      requests:
        cpu: 100m
        memory: 250Mi
      limits:
        memory: 2000Mi
